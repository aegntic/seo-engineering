version: '3'

services:
  nginx:
    container_name: seo-nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - api
      - website
      - grafana
      - n8n
    networks:
      - seo_network
    restart: always

  api:
    container_name: seo-api
    image: node:18-alpine
    volumes:
      - ./api:/app
    working_dir: /app
    command: npm start
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:${MONGO_ADMIN_PASSWORD:-default_password_for_development}@mongodb:27017/seo_engineering?authSource=admin
    depends_on:
      - mongodb
      - redis
    networks:
      - seo_network
    restart: always

  website:
    container_name: seo-website
    image: deployment-website
    networks:
      - seo_network
    restart: always

  mongodb:
    container_name: seo-mongodb
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD:-default_password_for_development}
      - MONGO_INITDB_DATABASE=seo_engineering
    networks:
      - seo_network
    restart: always

  redis:
    container_name: seo-redis
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - seo_network
    restart: always

  n8n:
    container_name: seo-n8n
    image: n8nio/n8n:latest
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_HOST=seo.engineering
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=EKphhdr^qI%0GcV%
      - N8N_ENCRYPTION_KEY=cUv6O1byRDMepJvjVGN4HA5yY6F2O5ZDtKSNlMqWVoI=
    depends_on:
      - postgres
    networks:
      - seo_network
    restart: always

  postgres:
    container_name: seo-postgres
    image: postgres:14
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=EKphhdr^qI%0GcV%
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - seo_network
    restart: always

  prometheus:
    container_name: seo-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - seo_network
    restart: always

  grafana:
    container_name: seo-grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=qOL0bC2y>)p&9f)
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - seo_network
    restart: always

  node-exporter:
    container_name: seo-node-exporter
    image: prom/node-exporter:latest
    networks:
      - seo_network
    restart: always

  backup:
    container_name: seo-backup
    image: alpine:latest
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
    command: /bin/sh -c 'chmod +x /scripts/backup.sh && tail -f /dev/null'
    depends_on:
      - mongodb
    networks:
      - seo_network
    restart: always

networks:
  seo_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  postgres_data:
  grafana_data:
  prometheus_data:
